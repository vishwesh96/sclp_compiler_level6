Program:
   Procedure: fibonacci, Return Type: INT

      Sequence Ast:

         IF : 
         CONDITION (
            Condition: EQ
               LHS (Name : i)
               RHS (Name : size))
         THEN (
      Sequence Ast:
)
         ELSE (
      Sequence Ast:

         Asgn:
            LHS (Name : next_num)
            RHS (
            Arith: PLUS
               LHS (Name : prev_number)
               RHS (Name : number))
         Asgn:
            LHS (Name : prev_number)
            RHS (Name : number)
         Asgn:
            LHS (Name : number)
            RHS (Name : next_num)
         Asgn:
            LHS (Name : i)
            RHS (
            Arith: PLUS
               LHS (Name : i)
               RHS (Num : 1))
         FN CALL: fibonacci(
            Name : prev_number
            Name : number))
         RETURN Num : 0
   Procedure: main, Return Type: VOID

      Sequence Ast:

         Asgn:
            LHS (Name : prev)
            RHS (Num : 0)
         Asgn:
            LHS (Name : number)
            RHS (Num : 1)
         Asgn:
            LHS (Name : size)
            RHS (Num : 20)
         Asgn:
            LHS (Name : i)
            RHS (Num : 1)
         FN CALL: fibonacci(
            Name : prev
            Name : number)
         RETURN <NOTHING>

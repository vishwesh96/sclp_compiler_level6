[parser.yy (info)] Line 1341: 
Production Rules
(rule precedences determined from %prec or 1st terminal between parentheses):
1: program ->  declaration_list procedure_definition_list
2: declaration_list ->  procedure_declaration_list
3: declaration_list ->  variable_declaration_list procedure_declaration_list
4: declaration_list ->  procedure_declaration_list variable_declaration_list
5: procedure_declaration_list ->  procedure_declaration
6: procedure_declaration_list ->  procedure_declaration_list procedure_declaration
7: procedure_declaration (NAME) ->  variable_type NAME '(' optional_argument_declaration_list ')' ';'
8: procedure_declaration (VOID) ->  VOID NAME '(' optional_argument_declaration_list ')' ';'
9: procedure_definition_list ->  procedure_definition
10: procedure_definition_list ->  procedure_definition_list procedure_definition
11: procedure_definition (NAME) ->  NAME '(' optional_argument_declaration_list ')' #0001 '{' optional_variable_declaration_list #0002 statement_list return_statement '}'
12: #0001 ->  <empty>
13: #0002 ->  <empty>
14: optional_variable_declaration_list ->  <empty>
15: optional_variable_declaration_list ->  variable_declaration_list
16: variable_declaration_list ->  variable_declaration
17: variable_declaration_list ->  variable_declaration_list variable_declaration
18: variable_declaration (';') ->  variable_type variable_list ';'
19: variable_type (INTEGER) ->  INTEGER
20: variable_type (FLOAT) ->  FLOAT
21: variable_list ->  variable_name
22: variable_list (',') ->  variable_list ',' variable_name
23: optional_actual_parameters_list ->  <empty>
24: optional_actual_parameters_list ->  actual_parameters_list
25: actual_parameters_list ->  actual_parameter
26: actual_parameters_list (',') ->  actual_parameters_list ',' actual_parameter
27: actual_parameter ->  arith_expression
28: variable_name (NAME) ->  NAME
29: statement_list ->  <empty>
30: statement_list ->  statement_list statement
31: statement ->  selection_statement
32: statement ->  assignment_statement
33: statement ->  iterative_statement
34: statement ->  return_statement
35: statement ->  function_call_statement
36: statement ->  function_call_assignment_statement
37: statement ('{') ->  '{' statement_list '}'
38: function_call_statement (';') ->  function_call ';'
39: function_call_assignment_statement (ASSIGN) ->  variable ASSIGN function_call ';'
40: return_statement (RETURN) ->  RETURN ';'
41: return_statement (RETURN) ->  RETURN arith_expression ';'
42: selection_statement (THEN) ->  IF '(' boolean_expression ')' statement
43: selection_statement (IF) ->  IF '(' boolean_expression ')' statement ELSE statement
44: iterative_statement (WHILE) ->  WHILE '(' boolean_expression ')' statement
45: iterative_statement (DO) ->  DO statement WHILE '(' boolean_expression ')' ';'
46: boolean_expression (OR) ->  boolean_expression OR boolean_expression
47: boolean_expression (AND) ->  boolean_expression AND boolean_expression
48: boolean_expression (NOT) ->  NOT boolean_expression
49: boolean_expression ('(') ->  '(' boolean_expression ')'
50: boolean_expression ->  relational_expression
51: relational_expression (LT) ->  operand LT operand
52: relational_expression (LE) ->  operand LE operand
53: relational_expression (GT) ->  operand GT operand
54: relational_expression (GE) ->  operand GE operand
55: relational_expression (EQ) ->  operand EQ operand
56: relational_expression (NE) ->  operand NE operand
57: assignment_statement (ASSIGN) ->  variable ASSIGN arith_expression ';'
58: arith_expression ('+') ->  operand '+' operand
59: arith_expression ('-') ->  operand '-' operand
60: arith_expression ('*') ->  operand '*' operand
61: arith_expression ('/') ->  operand '/' operand
62: arith_expression (UMINUS) ->  '-' operand
63: arith_expression ('?') ->  boolean_expression '?' operand ':' operand
64: arith_expression ('(') ->  '(' operand ')'
65: arith_expression ->  expression_term
66: operand ->  arith_expression
67: expression_term ->  variable
68: expression_term ->  constant
69: function_call (NAME) ->  NAME '(' optional_actual_parameters_list ')'
70: variable (NAME) ->  NAME
71: constant (INTEGER_NUMBER) ->  INTEGER_NUMBER
72: constant (DOUBLE_NUMBER) ->  DOUBLE_NUMBER
73: optional_argument_declaration_list ->  <empty>
74: optional_argument_declaration_list ->  argument_declaration_list
75: argument_declaration (NAME) ->  variable_type NAME
76: argument_declaration_list ->  argument_declaration
77: argument_declaration_list (',') ->  argument_declaration_list ',' argument_declaration
78: program_$ ->  program

[parser.yy (info)] 
Symbolic Terminal tokens:
       error
       EOF
   257: INTEGER_NUMBER
   258: DOUBLE_NUMBER
   259: NAME
   260: INTEGER
   261: FLOAT
   262: ASSIGN
   263: VOID
   264: IF
   265: WHILE
   266: DO
   267: RETURN
   268: THEN
   269: ELSE
    63: '?'
   270: OR
   271: AND
   272: EQ
   273: NE
   274: LT
   275: LE
   276: GT
   277: GE
    43: '+'
    45: '-'
    42: '*'
    47: '/'
   278: UMINUS
   279: NOT
    40: '('
    41: ')'
    59: ';'
   123: '{'
   125: '}'
    44: ','
    58: ':'

[parser.yy (info)] 
Grammar States: 
[parser.yy (info)] State 0:
78: program_$ ->  . program 
  0:   On program to state 1
  1:   On declaration_list to state 2
  2:   On procedure_declaration_list to state 3
  3:   On variable_declaration_list to state 4
  4:   On procedure_declaration to state 5
  5:   On variable_declaration to state 6
  6:   On variable_type to state 7
  7:   On VOID to state 8
  8:   On INTEGER to state 9
  9:   On FLOAT to state 10


State 1:
78: program_$ -> program  . 


State 2:
1: program -> declaration_list  . procedure_definition_list 
  0:   On procedure_definition_list to state 11
  1:   On procedure_definition to state 12
  2:   On NAME to state 13


State 3:
2: declaration_list -> procedure_declaration_list  . 
4: declaration_list -> procedure_declaration_list  . variable_declaration_list 
6: procedure_declaration_list -> procedure_declaration_list  . procedure_declaration 
  0:   On variable_declaration_list to state 14
  1:   On procedure_declaration to state 15
  2:   On variable_declaration to state 6
  3:   On variable_type to state 7
  4:   On VOID to state 8
  5:   On INTEGER to state 9
  6:   On FLOAT to state 10
  Reduce by 2: declaration_list -> procedure_declaration_list  . 


State 4:
3: declaration_list -> variable_declaration_list  . procedure_declaration_list 
17: variable_declaration_list -> variable_declaration_list  . variable_declaration 
  0:   On procedure_declaration_list to state 16
  1:   On variable_declaration to state 17
  2:   On procedure_declaration to state 5
  3:   On variable_type to state 7
  4:   On VOID to state 8
  5:   On INTEGER to state 9
  6:   On FLOAT to state 10


State 5:
5: procedure_declaration_list -> procedure_declaration  . 
  Reduce by 5: procedure_declaration_list -> procedure_declaration  . 


State 6:
16: variable_declaration_list -> variable_declaration  . 
  Reduce by 16: variable_declaration_list -> variable_declaration  . 


State 7:
7: procedure_declaration -> variable_type  . NAME '(' optional_argument_declaration_list ')' ';' 
18: variable_declaration -> variable_type  . variable_list ';' 
  0:   On NAME to state 18
  1:   On variable_list to state 19
  2:   On variable_name to state 20


State 8:
8: procedure_declaration -> VOID  . NAME '(' optional_argument_declaration_list ')' ';' 
  0:   On NAME to state 21


State 9:
19: variable_type -> INTEGER  . 
  Reduce by 19: variable_type -> INTEGER  . 


State 10:
20: variable_type -> FLOAT  . 
  Reduce by 20: variable_type -> FLOAT  . 


State 11:
1: program -> declaration_list procedure_definition_list  . 
10: procedure_definition_list -> procedure_definition_list  . procedure_definition 
  0:   On procedure_definition to state 22
  1:   On NAME to state 13
  Reduce by 1: program -> declaration_list procedure_definition_list  . 


State 12:
9: procedure_definition_list -> procedure_definition  . 
  Reduce by 9: procedure_definition_list -> procedure_definition  . 


State 13:
11: procedure_definition -> NAME  . '(' optional_argument_declaration_list ')' #0001 '{' optional_variable_declaration_list #0002 statement_list return_statement '}' 
  0:   On '(' to state 23


State 14:
4: declaration_list -> procedure_declaration_list variable_declaration_list  . 
17: variable_declaration_list -> variable_declaration_list  . variable_declaration 
  0:   On variable_declaration to state 17
  1:   On variable_type to state 24
  2:   On INTEGER to state 9
  3:   On FLOAT to state 10
  Reduce by 4: declaration_list -> procedure_declaration_list variable_declaration_list  . 


State 15:
6: procedure_declaration_list -> procedure_declaration_list procedure_declaration  . 
  Reduce by 6: procedure_declaration_list -> procedure_declaration_list procedure_declaration  . 


State 16:
3: declaration_list -> variable_declaration_list procedure_declaration_list  . 
6: procedure_declaration_list -> procedure_declaration_list  . procedure_declaration 
  0:   On procedure_declaration to state 15
  1:   On variable_type to state 25
  2:   On VOID to state 8
  3:   On INTEGER to state 9
  4:   On FLOAT to state 10
  Reduce by 3: declaration_list -> variable_declaration_list procedure_declaration_list  . 


State 17:
17: variable_declaration_list -> variable_declaration_list variable_declaration  . 
  Reduce by 17: variable_declaration_list -> variable_declaration_list variable_declaration  . 


State 18:
7: procedure_declaration -> variable_type NAME  . '(' optional_argument_declaration_list ')' ';' 
28: variable_name -> NAME  . 
  0:   On '(' to state 26
  Reduce by 28: variable_name -> NAME  . 


State 19:
18: variable_declaration -> variable_type variable_list  . ';' 
22: variable_list -> variable_list  . ',' variable_name 
  0:   On ';' to state 27
  1:   On ',' to state 28


State 20:
21: variable_list -> variable_name  . 
  Reduce by 21: variable_list -> variable_name  . 


State 21:
8: procedure_declaration -> VOID NAME  . '(' optional_argument_declaration_list ')' ';' 
  0:   On '(' to state 29


State 22:
10: procedure_definition_list -> procedure_definition_list procedure_definition  . 
  Reduce by 10: procedure_definition_list -> procedure_definition_list procedure_definition  . 


State 23:
11: procedure_definition -> NAME '('  . optional_argument_declaration_list ')' #0001 '{' optional_variable_declaration_list #0002 statement_list return_statement '}' 
  0:   On optional_argument_declaration_list to state 30
  1:   On argument_declaration_list to state 31
  2:   On argument_declaration to state 32
  3:   On variable_type to state 33
  4:   On INTEGER to state 9
  5:   On FLOAT to state 10
  Reduce by 73: optional_argument_declaration_list ->  . 


State 24:
18: variable_declaration -> variable_type  . variable_list ';' 
  0:   On variable_list to state 19
  1:   On variable_name to state 20
  2:   On NAME to state 34


State 25:
7: procedure_declaration -> variable_type  . NAME '(' optional_argument_declaration_list ')' ';' 
  0:   On NAME to state 35


State 26:
7: procedure_declaration -> variable_type NAME '('  . optional_argument_declaration_list ')' ';' 
  0:   On optional_argument_declaration_list to state 36
  1:   On argument_declaration_list to state 31
  2:   On argument_declaration to state 32
  3:   On variable_type to state 33
  4:   On INTEGER to state 9
  5:   On FLOAT to state 10
  Reduce by 73: optional_argument_declaration_list ->  . 


State 27:
18: variable_declaration -> variable_type variable_list ';'  . 
  Reduce by 18: variable_declaration -> variable_type variable_list ';'  . 


State 28:
22: variable_list -> variable_list ','  . variable_name 
  0:   On variable_name to state 37
  1:   On NAME to state 34


State 29:
8: procedure_declaration -> VOID NAME '('  . optional_argument_declaration_list ')' ';' 
  0:   On optional_argument_declaration_list to state 38
  1:   On argument_declaration_list to state 31
  2:   On argument_declaration to state 32
  3:   On variable_type to state 33
  4:   On INTEGER to state 9
  5:   On FLOAT to state 10
  Reduce by 73: optional_argument_declaration_list ->  . 


State 30:
11: procedure_definition -> NAME '(' optional_argument_declaration_list  . ')' #0001 '{' optional_variable_declaration_list #0002 statement_list return_statement '}' 
  0:   On ')' to state 39


State 31:
74: optional_argument_declaration_list -> argument_declaration_list  . 
77: argument_declaration_list -> argument_declaration_list  . ',' argument_declaration 
  0:   On ',' to state 40
  Reduce by 74: optional_argument_declaration_list -> argument_declaration_list  . 


State 32:
76: argument_declaration_list -> argument_declaration  . 
  Reduce by 76: argument_declaration_list -> argument_declaration  . 


State 33:
75: argument_declaration -> variable_type  . NAME 
  0:   On NAME to state 41


State 34:
28: variable_name -> NAME  . 
  Reduce by 28: variable_name -> NAME  . 


State 35:
7: procedure_declaration -> variable_type NAME  . '(' optional_argument_declaration_list ')' ';' 
  0:   On '(' to state 26


State 36:
7: procedure_declaration -> variable_type NAME '(' optional_argument_declaration_list  . ')' ';' 
  0:   On ')' to state 42


State 37:
22: variable_list -> variable_list ',' variable_name  . 
  Reduce by 22: variable_list -> variable_list ',' variable_name  . 


State 38:
8: procedure_declaration -> VOID NAME '(' optional_argument_declaration_list  . ')' ';' 
  0:   On ')' to state 43


State 39:
11: procedure_definition -> NAME '(' optional_argument_declaration_list ')'  . #0001 '{' optional_variable_declaration_list #0002 statement_list return_statement '}' 
  0:   On #0001 to state 44
  Reduce by 12: #0001 ->  . 


State 40:
77: argument_declaration_list -> argument_declaration_list ','  . argument_declaration 
  0:   On argument_declaration to state 45
  1:   On variable_type to state 33
  2:   On INTEGER to state 9
  3:   On FLOAT to state 10


State 41:
75: argument_declaration -> variable_type NAME  . 
  Reduce by 75: argument_declaration -> variable_type NAME  . 


State 42:
7: procedure_declaration -> variable_type NAME '(' optional_argument_declaration_list ')'  . ';' 
  0:   On ';' to state 46


State 43:
8: procedure_declaration -> VOID NAME '(' optional_argument_declaration_list ')'  . ';' 
  0:   On ';' to state 47


State 44:
11: procedure_definition -> NAME '(' optional_argument_declaration_list ')' #0001  . '{' optional_variable_declaration_list #0002 statement_list return_statement '}' 
  0:   On '{' to state 48


State 45:
77: argument_declaration_list -> argument_declaration_list ',' argument_declaration  . 
  Reduce by 77: argument_declaration_list -> argument_declaration_list ',' argument_declaration  . 


State 46:
7: procedure_declaration -> variable_type NAME '(' optional_argument_declaration_list ')' ';'  . 
  Reduce by 7: procedure_declaration -> variable_type NAME '(' optional_argument_declaration_list ')' ';'  . 


State 47:
8: procedure_declaration -> VOID NAME '(' optional_argument_declaration_list ')' ';'  . 
  Reduce by 8: procedure_declaration -> VOID NAME '(' optional_argument_declaration_list ')' ';'  . 


State 48:
11: procedure_definition -> NAME '(' optional_argument_declaration_list ')' #0001 '{'  . optional_variable_declaration_list #0002 statement_list return_statement '}' 
  0:   On optional_variable_declaration_list to state 49
  1:   On variable_declaration_list to state 50
  2:   On variable_declaration to state 6
  3:   On variable_type to state 24
  4:   On INTEGER to state 9
  5:   On FLOAT to state 10
  Reduce by 14: optional_variable_declaration_list ->  . 


State 49:
11: procedure_definition -> NAME '(' optional_argument_declaration_list ')' #0001 '{' optional_variable_declaration_list  . #0002 statement_list return_statement '}' 
  0:   On #0002 to state 51
  Reduce by 13: #0002 ->  . 


State 50:
15: optional_variable_declaration_list -> variable_declaration_list  . 
17: variable_declaration_list -> variable_declaration_list  . variable_declaration 
  0:   On variable_declaration to state 17
  1:   On variable_type to state 24
  2:   On INTEGER to state 9
  3:   On FLOAT to state 10
  Reduce by 15: optional_variable_declaration_list -> variable_declaration_list  . 


State 51:
11: procedure_definition -> NAME '(' optional_argument_declaration_list ')' #0001 '{' optional_variable_declaration_list #0002  . statement_list return_statement '}' 
  0:   On statement_list to state 52
  Reduce by 29: statement_list ->  . 


State 52:
11: procedure_definition -> NAME '(' optional_argument_declaration_list ')' #0001 '{' optional_variable_declaration_list #0002 statement_list  . return_statement '}' 
30: statement_list -> statement_list  . statement 
  0:   On return_statement to state 53
  1:   On statement to state 54
  2:   On RETURN to state 55
  3:   On selection_statement to state 56
  4:   On assignment_statement to state 57
  5:   On iterative_statement to state 58
  6:   On function_call_statement to state 59
  7:   On function_call_assignment_statement to state 60
  8:   On '{' to state 61
  9:   On IF to state 62
  10:   On variable to state 63
  11:   On WHILE to state 64
  12:   On DO to state 65
  13:   On function_call to state 66
  14:   On NAME to state 67


State 53:
11: procedure_definition -> NAME '(' optional_argument_declaration_list ')' #0001 '{' optional_variable_declaration_list #0002 statement_list return_statement  . '}' 
34: statement -> return_statement  . 
  0:   On '}' to state 68
  Reduce by 34: statement -> return_statement  . 


State 54:
30: statement_list -> statement_list statement  . 
  Reduce by 30: statement_list -> statement_list statement  . 


State 55:
40: return_statement -> RETURN  . ';' 
41: return_statement -> RETURN  . arith_expression ';' 
  0:   On ';' to state 69
  1:   On arith_expression to state 70
  2:   On operand to state 71
  3:   On '-' to state 72
  4:   On boolean_expression to state 73
  5:   On '(' to state 74
  6:   On expression_term to state 75
  7:   On NOT to state 76
  8:   On relational_expression to state 77
  9:   On variable to state 78
  10:   On constant to state 79
  11:   On NAME to state 80
  12:   On INTEGER_NUMBER to state 81
  13:   On DOUBLE_NUMBER to state 82


State 56:
31: statement -> selection_statement  . 
  Reduce by 31: statement -> selection_statement  . 


State 57:
32: statement -> assignment_statement  . 
  Reduce by 32: statement -> assignment_statement  . 


State 58:
33: statement -> iterative_statement  . 
  Reduce by 33: statement -> iterative_statement  . 


State 59:
35: statement -> function_call_statement  . 
  Reduce by 35: statement -> function_call_statement  . 


State 60:
36: statement -> function_call_assignment_statement  . 
  Reduce by 36: statement -> function_call_assignment_statement  . 


State 61:
37: statement -> '{'  . statement_list '}' 
  0:   On statement_list to state 83
  Reduce by 29: statement_list ->  . 


State 62:
42: selection_statement -> IF  . '(' boolean_expression ')' statement 
43: selection_statement -> IF  . '(' boolean_expression ')' statement ELSE statement 
  0:   On '(' to state 84


State 63:
57: assignment_statement -> variable  . ASSIGN arith_expression ';' 
39: function_call_assignment_statement -> variable  . ASSIGN function_call ';' 
  0:   On ASSIGN to state 85


State 64:
44: iterative_statement -> WHILE  . '(' boolean_expression ')' statement 
  0:   On '(' to state 86


State 65:
45: iterative_statement -> DO  . statement WHILE '(' boolean_expression ')' ';' 
  0:   On statement to state 87
  1:   On selection_statement to state 56
  2:   On assignment_statement to state 57
  3:   On iterative_statement to state 58
  4:   On return_statement to state 88
  5:   On function_call_statement to state 59
  6:   On function_call_assignment_statement to state 60
  7:   On '{' to state 61
  8:   On IF to state 62
  9:   On variable to state 63
  10:   On WHILE to state 64
  11:   On DO to state 65
  12:   On RETURN to state 55
  13:   On function_call to state 66
  14:   On NAME to state 67


State 66:
38: function_call_statement -> function_call  . ';' 
  0:   On ';' to state 89


State 67:
70: variable -> NAME  . 
69: function_call -> NAME  . '(' optional_actual_parameters_list ')' 
  0:   On '(' to state 90
  Reduce by 70: variable -> NAME  . 


State 68:
11: procedure_definition -> NAME '(' optional_argument_declaration_list ')' #0001 '{' optional_variable_declaration_list #0002 statement_list return_statement '}'  . 
  Reduce by 11: procedure_definition -> NAME '(' optional_argument_declaration_list ')' #0001 '{' optional_variable_declaration_list #0002 statement_list return_statement '}'  . 


State 69:
40: return_statement -> RETURN ';'  . 
  Reduce by 40: return_statement -> RETURN ';'  . 


State 70:
41: return_statement -> RETURN arith_expression  . ';' 
66: operand -> arith_expression  . 
  0:   On ';' to state 91
  Reduce by 66: operand -> arith_expression  . 


State 71:
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0:   On '+' to state 92
  1:   On '-' to state 93
  2:   On '*' to state 94
  3:   On '/' to state 95
  4:   On LT to state 96
  5:   On LE to state 97
  6:   On GT to state 98
  7:   On GE to state 99
  8:   On EQ to state 100
  9:   On NE to state 101


State 72:
62: arith_expression -> '-'  . operand 
  0:   On operand to state 102
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 73:
63: arith_expression -> boolean_expression  . '?' operand ':' operand 
46: boolean_expression -> boolean_expression  . OR boolean_expression 
47: boolean_expression -> boolean_expression  . AND boolean_expression 
  0:   On '?' to state 104
  1:   On OR to state 105
  2:   On AND to state 106


State 74:
64: arith_expression -> '('  . operand ')' 
49: boolean_expression -> '('  . boolean_expression ')' 
  0:   On operand to state 107
  1:   On boolean_expression to state 108
  2:   On arith_expression to state 103
  3:   On NOT to state 76
  4:   On '(' to state 74
  5:   On relational_expression to state 77
  6:   On '-' to state 72
  7:   On expression_term to state 75
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 75:
65: arith_expression -> expression_term  . 
  Reduce by 65: arith_expression -> expression_term  . 


State 76:
48: boolean_expression -> NOT  . boolean_expression 
  0:   On boolean_expression to state 109
  1:   On NOT to state 76
  2:   On '(' to state 74
  3:   On relational_expression to state 77
  4:   On operand to state 71
  5:   On arith_expression to state 103
  6:   On '-' to state 72
  7:   On expression_term to state 75
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 77:
50: boolean_expression -> relational_expression  . 
  Reduce by 50: boolean_expression -> relational_expression  . 


State 78:
67: expression_term -> variable  . 
  Reduce by 67: expression_term -> variable  . 


State 79:
68: expression_term -> constant  . 
  Reduce by 68: expression_term -> constant  . 


State 80:
70: variable -> NAME  . 
  Reduce by 70: variable -> NAME  . 


State 81:
71: constant -> INTEGER_NUMBER  . 
  Reduce by 71: constant -> INTEGER_NUMBER  . 


State 82:
72: constant -> DOUBLE_NUMBER  . 
  Reduce by 72: constant -> DOUBLE_NUMBER  . 


State 83:
37: statement -> '{' statement_list  . '}' 
30: statement_list -> statement_list  . statement 
  0:   On '}' to state 110
  1:   On statement to state 54
  2:   On selection_statement to state 56
  3:   On assignment_statement to state 57
  4:   On iterative_statement to state 58
  5:   On return_statement to state 88
  6:   On function_call_statement to state 59
  7:   On function_call_assignment_statement to state 60
  8:   On '{' to state 61
  9:   On IF to state 62
  10:   On variable to state 63
  11:   On WHILE to state 64
  12:   On DO to state 65
  13:   On RETURN to state 55
  14:   On function_call to state 66
  15:   On NAME to state 67


State 84:
42: selection_statement -> IF '('  . boolean_expression ')' statement 
43: selection_statement -> IF '('  . boolean_expression ')' statement ELSE statement 
  0:   On boolean_expression to state 111
  1:   On NOT to state 76
  2:   On '(' to state 74
  3:   On relational_expression to state 77
  4:   On operand to state 71
  5:   On arith_expression to state 103
  6:   On '-' to state 72
  7:   On expression_term to state 75
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 85:
57: assignment_statement -> variable ASSIGN  . arith_expression ';' 
39: function_call_assignment_statement -> variable ASSIGN  . function_call ';' 
  0:   On arith_expression to state 112
  1:   On function_call to state 113
  2:   On operand to state 71
  3:   On '-' to state 72
  4:   On boolean_expression to state 73
  5:   On '(' to state 74
  6:   On expression_term to state 75
  7:   On NAME to state 67
  8:   On NOT to state 76
  9:   On relational_expression to state 77
  10:   On variable to state 78
  11:   On constant to state 79
  12:   On INTEGER_NUMBER to state 81
  13:   On DOUBLE_NUMBER to state 82


State 86:
44: iterative_statement -> WHILE '('  . boolean_expression ')' statement 
  0:   On boolean_expression to state 114
  1:   On NOT to state 76
  2:   On '(' to state 74
  3:   On relational_expression to state 77
  4:   On operand to state 71
  5:   On arith_expression to state 103
  6:   On '-' to state 72
  7:   On expression_term to state 75
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 87:
45: iterative_statement -> DO statement  . WHILE '(' boolean_expression ')' ';' 
  0:   On WHILE to state 115


State 88:
34: statement -> return_statement  . 
  Reduce by 34: statement -> return_statement  . 


State 89:
38: function_call_statement -> function_call ';'  . 
  Reduce by 38: function_call_statement -> function_call ';'  . 


State 90:
69: function_call -> NAME '('  . optional_actual_parameters_list ')' 
  0:   On optional_actual_parameters_list to state 116
  1:   On actual_parameters_list to state 117
  2:   On actual_parameter to state 118
  3:   On arith_expression to state 119
  4:   On operand to state 71
  5:   On '-' to state 72
  6:   On boolean_expression to state 73
  7:   On '(' to state 74
  8:   On expression_term to state 75
  9:   On NOT to state 76
  10:   On relational_expression to state 77
  11:   On variable to state 78
  12:   On constant to state 79
  13:   On NAME to state 80
  14:   On INTEGER_NUMBER to state 81
  15:   On DOUBLE_NUMBER to state 82
  Reduce by 23: optional_actual_parameters_list ->  . 


State 91:
41: return_statement -> RETURN arith_expression ';'  . 
  Reduce by 41: return_statement -> RETURN arith_expression ';'  . 


State 92:
58: arith_expression -> operand '+'  . operand 
  0:   On operand to state 120
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 93:
59: arith_expression -> operand '-'  . operand 
  0:   On operand to state 121
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 94:
60: arith_expression -> operand '*'  . operand 
  0:   On operand to state 122
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 95:
61: arith_expression -> operand '/'  . operand 
  0:   On operand to state 123
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 96:
51: relational_expression -> operand LT  . operand 
  0:   On operand to state 124
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 97:
52: relational_expression -> operand LE  . operand 
  0:   On operand to state 125
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 98:
53: relational_expression -> operand GT  . operand 
  0:   On operand to state 126
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 99:
54: relational_expression -> operand GE  . operand 
  0:   On operand to state 127
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 100:
55: relational_expression -> operand EQ  . operand 
  0:   On operand to state 128
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 101:
56: relational_expression -> operand NE  . operand 
  0:   On operand to state 129
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 102:
62: arith_expression -> '-' operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0 (removed by precedence):   On '+' to state 92
  1 (removed by precedence):   On '-' to state 93
  2 (removed by precedence):   On '*' to state 94
  3 (removed by precedence):   On '/' to state 95
  4 (removed by precedence):   On LT to state 96
  5 (removed by precedence):   On LE to state 97
  6 (removed by precedence):   On GT to state 98
  7 (removed by precedence):   On GE to state 99
  8 (removed by precedence):   On EQ to state 100
  9 (removed by precedence):   On NE to state 101
  Reduce by 62: arith_expression -> '-' operand  . 


State 103:
66: operand -> arith_expression  . 
  Reduce by 66: operand -> arith_expression  . 


State 104:
63: arith_expression -> boolean_expression '?'  . operand ':' operand 
  0:   On operand to state 130
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 105:
46: boolean_expression -> boolean_expression OR  . boolean_expression 
  0:   On boolean_expression to state 131
  1:   On NOT to state 76
  2:   On '(' to state 74
  3:   On relational_expression to state 77
  4:   On operand to state 71
  5:   On arith_expression to state 103
  6:   On '-' to state 72
  7:   On expression_term to state 75
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 106:
47: boolean_expression -> boolean_expression AND  . boolean_expression 
  0:   On boolean_expression to state 132
  1:   On NOT to state 76
  2:   On '(' to state 74
  3:   On relational_expression to state 77
  4:   On operand to state 71
  5:   On arith_expression to state 103
  6:   On '-' to state 72
  7:   On expression_term to state 75
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 107:
64: arith_expression -> '(' operand  . ')' 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0:   On ')' to state 133
  1:   On '+' to state 92
  2:   On '-' to state 93
  3:   On '*' to state 94
  4:   On '/' to state 95
  5:   On LT to state 96
  6:   On LE to state 97
  7:   On GT to state 98
  8:   On GE to state 99
  9:   On EQ to state 100
  10:   On NE to state 101


State 108:
49: boolean_expression -> '(' boolean_expression  . ')' 
46: boolean_expression -> boolean_expression  . OR boolean_expression 
47: boolean_expression -> boolean_expression  . AND boolean_expression 
63: arith_expression -> boolean_expression  . '?' operand ':' operand 
  0:   On ')' to state 134
  1:   On OR to state 105
  2:   On AND to state 106
  3:   On '?' to state 104


State 109:
48: boolean_expression -> NOT boolean_expression  . 
46: boolean_expression -> boolean_expression  . OR boolean_expression 
47: boolean_expression -> boolean_expression  . AND boolean_expression 
63: arith_expression -> boolean_expression  . '?' operand ':' operand 
  0 (removed by precedence):   On OR to state 105
  1 (removed by precedence):   On AND to state 106
  2 (removed by precedence):   On '?' to state 104
  Reduce by 48: boolean_expression -> NOT boolean_expression  . 


State 110:
37: statement -> '{' statement_list '}'  . 
  Reduce by 37: statement -> '{' statement_list '}'  . 


State 111:
42: selection_statement -> IF '(' boolean_expression  . ')' statement 
43: selection_statement -> IF '(' boolean_expression  . ')' statement ELSE statement 
46: boolean_expression -> boolean_expression  . OR boolean_expression 
47: boolean_expression -> boolean_expression  . AND boolean_expression 
63: arith_expression -> boolean_expression  . '?' operand ':' operand 
  0:   On ')' to state 135
  1:   On OR to state 105
  2:   On AND to state 106
  3:   On '?' to state 104


State 112:
57: assignment_statement -> variable ASSIGN arith_expression  . ';' 
66: operand -> arith_expression  . 
  0:   On ';' to state 136
  Reduce by 66: operand -> arith_expression  . 


State 113:
39: function_call_assignment_statement -> variable ASSIGN function_call  . ';' 
  0:   On ';' to state 137


State 114:
44: iterative_statement -> WHILE '(' boolean_expression  . ')' statement 
46: boolean_expression -> boolean_expression  . OR boolean_expression 
47: boolean_expression -> boolean_expression  . AND boolean_expression 
63: arith_expression -> boolean_expression  . '?' operand ':' operand 
  0:   On ')' to state 138
  1:   On OR to state 105
  2:   On AND to state 106
  3:   On '?' to state 104


State 115:
45: iterative_statement -> DO statement WHILE  . '(' boolean_expression ')' ';' 
  0:   On '(' to state 139


State 116:
69: function_call -> NAME '(' optional_actual_parameters_list  . ')' 
  0:   On ')' to state 140


State 117:
24: optional_actual_parameters_list -> actual_parameters_list  . 
26: actual_parameters_list -> actual_parameters_list  . ',' actual_parameter 
  0:   On ',' to state 141
  Reduce by 24: optional_actual_parameters_list -> actual_parameters_list  . 


State 118:
25: actual_parameters_list -> actual_parameter  . 
  Reduce by 25: actual_parameters_list -> actual_parameter  . 


State 119:
27: actual_parameter -> arith_expression  . 
66: operand -> arith_expression  . 
  Reduce by 27: actual_parameter -> arith_expression  . 
  Reduce by 66: operand -> arith_expression  . 


State 120:
58: arith_expression -> operand '+' operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0 (removed by precedence):   On '+' to state 92
  1 (removed by precedence):   On '-' to state 93
  2:   On '*' to state 94
  3:   On '/' to state 95
  4 (removed by precedence):   On LT to state 96
  5 (removed by precedence):   On LE to state 97
  6 (removed by precedence):   On GT to state 98
  7 (removed by precedence):   On GE to state 99
  8 (removed by precedence):   On EQ to state 100
  9 (removed by precedence):   On NE to state 101
  Reduce by 58: arith_expression -> operand '+' operand  . 


State 121:
59: arith_expression -> operand '-' operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0 (removed by precedence):   On '+' to state 92
  1 (removed by precedence):   On '-' to state 93
  2:   On '*' to state 94
  3:   On '/' to state 95
  4 (removed by precedence):   On LT to state 96
  5 (removed by precedence):   On LE to state 97
  6 (removed by precedence):   On GT to state 98
  7 (removed by precedence):   On GE to state 99
  8 (removed by precedence):   On EQ to state 100
  9 (removed by precedence):   On NE to state 101
  Reduce by 59: arith_expression -> operand '-' operand  . 


State 122:
60: arith_expression -> operand '*' operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0 (removed by precedence):   On '+' to state 92
  1 (removed by precedence):   On '-' to state 93
  2 (removed by precedence):   On '*' to state 94
  3 (removed by precedence):   On '/' to state 95
  4 (removed by precedence):   On LT to state 96
  5 (removed by precedence):   On LE to state 97
  6 (removed by precedence):   On GT to state 98
  7 (removed by precedence):   On GE to state 99
  8 (removed by precedence):   On EQ to state 100
  9 (removed by precedence):   On NE to state 101
  Reduce by 60: arith_expression -> operand '*' operand  . 


State 123:
61: arith_expression -> operand '/' operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0 (removed by precedence):   On '+' to state 92
  1 (removed by precedence):   On '-' to state 93
  2 (removed by precedence):   On '*' to state 94
  3 (removed by precedence):   On '/' to state 95
  4 (removed by precedence):   On LT to state 96
  5 (removed by precedence):   On LE to state 97
  6 (removed by precedence):   On GT to state 98
  7 (removed by precedence):   On GE to state 99
  8 (removed by precedence):   On EQ to state 100
  9 (removed by precedence):   On NE to state 101
  Reduce by 61: arith_expression -> operand '/' operand  . 


State 124:
51: relational_expression -> operand LT operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0:   On '+' to state 92
  1:   On '-' to state 93
  2:   On '*' to state 94
  3:   On '/' to state 95
  4:   On LT to state 96
  5:   On LE to state 97
  6:   On GT to state 98
  7:   On GE to state 99
  8:   On EQ to state 100
  9:   On NE to state 101
  Reduce by 51: relational_expression -> operand LT operand  . 


State 125:
52: relational_expression -> operand LE operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0:   On '+' to state 92
  1:   On '-' to state 93
  2:   On '*' to state 94
  3:   On '/' to state 95
  4:   On LT to state 96
  5:   On LE to state 97
  6:   On GT to state 98
  7:   On GE to state 99
  8:   On EQ to state 100
  9:   On NE to state 101
  Reduce by 52: relational_expression -> operand LE operand  . 


State 126:
53: relational_expression -> operand GT operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0:   On '+' to state 92
  1:   On '-' to state 93
  2:   On '*' to state 94
  3:   On '/' to state 95
  4 (removed by precedence):   On LT to state 96
  5 (removed by precedence):   On LE to state 97
  6 (removed by precedence):   On GT to state 98
  7 (removed by precedence):   On GE to state 99
  8 (removed by precedence):   On EQ to state 100
  9 (removed by precedence):   On NE to state 101
  Reduce by 53: relational_expression -> operand GT operand  . 


State 127:
54: relational_expression -> operand GE operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0:   On '+' to state 92
  1:   On '-' to state 93
  2:   On '*' to state 94
  3:   On '/' to state 95
  4 (removed by precedence):   On LT to state 96
  5 (removed by precedence):   On LE to state 97
  6 (removed by precedence):   On GT to state 98
  7 (removed by precedence):   On GE to state 99
  8 (removed by precedence):   On EQ to state 100
  9 (removed by precedence):   On NE to state 101
  Reduce by 54: relational_expression -> operand GE operand  . 


State 128:
55: relational_expression -> operand EQ operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0:   On '+' to state 92
  1:   On '-' to state 93
  2:   On '*' to state 94
  3:   On '/' to state 95
  4:   On LT to state 96
  5:   On LE to state 97
  6:   On GT to state 98
  7:   On GE to state 99
  8 (removed by precedence):   On EQ to state 100
  9 (removed by precedence):   On NE to state 101
  Reduce by 55: relational_expression -> operand EQ operand  . 


State 129:
56: relational_expression -> operand NE operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0:   On '+' to state 92
  1:   On '-' to state 93
  2:   On '*' to state 94
  3:   On '/' to state 95
  4:   On LT to state 96
  5:   On LE to state 97
  6:   On GT to state 98
  7:   On GE to state 99
  8 (removed by precedence):   On EQ to state 100
  9 (removed by precedence):   On NE to state 101
  Reduce by 56: relational_expression -> operand NE operand  . 


State 130:
63: arith_expression -> boolean_expression '?' operand  . ':' operand 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0:   On ':' to state 142
  1:   On '+' to state 92
  2:   On '-' to state 93
  3:   On '*' to state 94
  4:   On '/' to state 95
  5:   On LT to state 96
  6:   On LE to state 97
  7:   On GT to state 98
  8:   On GE to state 99
  9:   On EQ to state 100
  10:   On NE to state 101


State 131:
46: boolean_expression -> boolean_expression OR boolean_expression  . 
46: boolean_expression -> boolean_expression  . OR boolean_expression 
47: boolean_expression -> boolean_expression  . AND boolean_expression 
63: arith_expression -> boolean_expression  . '?' operand ':' operand 
  0 (removed by precedence):   On OR to state 105
  1:   On AND to state 106
  2 (removed by precedence):   On '?' to state 104
  Reduce by 46: boolean_expression -> boolean_expression OR boolean_expression  . 


State 132:
47: boolean_expression -> boolean_expression AND boolean_expression  . 
46: boolean_expression -> boolean_expression  . OR boolean_expression 
47: boolean_expression -> boolean_expression  . AND boolean_expression 
63: arith_expression -> boolean_expression  . '?' operand ':' operand 
  0 (removed by precedence):   On OR to state 105
  1 (removed by precedence):   On AND to state 106
  2 (removed by precedence):   On '?' to state 104
  Reduce by 47: boolean_expression -> boolean_expression AND boolean_expression  . 


State 133:
64: arith_expression -> '(' operand ')'  . 
  Reduce by 64: arith_expression -> '(' operand ')'  . 


State 134:
49: boolean_expression -> '(' boolean_expression ')'  . 
  Reduce by 49: boolean_expression -> '(' boolean_expression ')'  . 


State 135:
42: selection_statement -> IF '(' boolean_expression ')'  . statement 
43: selection_statement -> IF '(' boolean_expression ')'  . statement ELSE statement 
  0:   On statement to state 143
  1:   On selection_statement to state 56
  2:   On assignment_statement to state 57
  3:   On iterative_statement to state 58
  4:   On return_statement to state 88
  5:   On function_call_statement to state 59
  6:   On function_call_assignment_statement to state 60
  7:   On '{' to state 61
  8:   On IF to state 62
  9:   On variable to state 63
  10:   On WHILE to state 64
  11:   On DO to state 65
  12:   On RETURN to state 55
  13:   On function_call to state 66
  14:   On NAME to state 67


State 136:
57: assignment_statement -> variable ASSIGN arith_expression ';'  . 
  Reduce by 57: assignment_statement -> variable ASSIGN arith_expression ';'  . 


State 137:
39: function_call_assignment_statement -> variable ASSIGN function_call ';'  . 
  Reduce by 39: function_call_assignment_statement -> variable ASSIGN function_call ';'  . 


State 138:
44: iterative_statement -> WHILE '(' boolean_expression ')'  . statement 
  0:   On statement to state 144
  1:   On selection_statement to state 56
  2:   On assignment_statement to state 57
  3:   On iterative_statement to state 58
  4:   On return_statement to state 88
  5:   On function_call_statement to state 59
  6:   On function_call_assignment_statement to state 60
  7:   On '{' to state 61
  8:   On IF to state 62
  9:   On variable to state 63
  10:   On WHILE to state 64
  11:   On DO to state 65
  12:   On RETURN to state 55
  13:   On function_call to state 66
  14:   On NAME to state 67


State 139:
45: iterative_statement -> DO statement WHILE '('  . boolean_expression ')' ';' 
  0:   On boolean_expression to state 145
  1:   On NOT to state 76
  2:   On '(' to state 74
  3:   On relational_expression to state 77
  4:   On operand to state 71
  5:   On arith_expression to state 103
  6:   On '-' to state 72
  7:   On expression_term to state 75
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 140:
69: function_call -> NAME '(' optional_actual_parameters_list ')'  . 
  Reduce by 69: function_call -> NAME '(' optional_actual_parameters_list ')'  . 


State 141:
26: actual_parameters_list -> actual_parameters_list ','  . actual_parameter 
  0:   On actual_parameter to state 146
  1:   On arith_expression to state 119
  2:   On operand to state 71
  3:   On '-' to state 72
  4:   On boolean_expression to state 73
  5:   On '(' to state 74
  6:   On expression_term to state 75
  7:   On NOT to state 76
  8:   On relational_expression to state 77
  9:   On variable to state 78
  10:   On constant to state 79
  11:   On NAME to state 80
  12:   On INTEGER_NUMBER to state 81
  13:   On DOUBLE_NUMBER to state 82


State 142:
63: arith_expression -> boolean_expression '?' operand ':'  . operand 
  0:   On operand to state 147
  1:   On arith_expression to state 103
  2:   On '-' to state 72
  3:   On boolean_expression to state 73
  4:   On '(' to state 74
  5:   On expression_term to state 75
  6:   On NOT to state 76
  7:   On relational_expression to state 77
  8:   On variable to state 78
  9:   On constant to state 79
  10:   On NAME to state 80
  11:   On INTEGER_NUMBER to state 81
  12:   On DOUBLE_NUMBER to state 82


State 143:
42: selection_statement -> IF '(' boolean_expression ')' statement  . 
43: selection_statement -> IF '(' boolean_expression ')' statement  . ELSE statement 
  0:   On ELSE to state 148
  Reduce by 42: selection_statement -> IF '(' boolean_expression ')' statement  . 


State 144:
44: iterative_statement -> WHILE '(' boolean_expression ')' statement  . 
  Reduce by 44: iterative_statement -> WHILE '(' boolean_expression ')' statement  . 


State 145:
45: iterative_statement -> DO statement WHILE '(' boolean_expression  . ')' ';' 
46: boolean_expression -> boolean_expression  . OR boolean_expression 
47: boolean_expression -> boolean_expression  . AND boolean_expression 
63: arith_expression -> boolean_expression  . '?' operand ':' operand 
  0:   On ')' to state 149
  1:   On OR to state 105
  2:   On AND to state 106
  3:   On '?' to state 104


State 146:
26: actual_parameters_list -> actual_parameters_list ',' actual_parameter  . 
  Reduce by 26: actual_parameters_list -> actual_parameters_list ',' actual_parameter  . 


State 147:
63: arith_expression -> boolean_expression '?' operand ':' operand  . 
58: arith_expression -> operand  . '+' operand 
59: arith_expression -> operand  . '-' operand 
60: arith_expression -> operand  . '*' operand 
61: arith_expression -> operand  . '/' operand 
51: relational_expression -> operand  . LT operand 
52: relational_expression -> operand  . LE operand 
53: relational_expression -> operand  . GT operand 
54: relational_expression -> operand  . GE operand 
55: relational_expression -> operand  . EQ operand 
56: relational_expression -> operand  . NE operand 
  0:   On '+' to state 92
  1:   On '-' to state 93
  2:   On '*' to state 94
  3:   On '/' to state 95
  4:   On LT to state 96
  5:   On LE to state 97
  6:   On GT to state 98
  7:   On GE to state 99
  8:   On EQ to state 100
  9:   On NE to state 101
  Reduce by 63: arith_expression -> boolean_expression '?' operand ':' operand  . 


State 148:
43: selection_statement -> IF '(' boolean_expression ')' statement ELSE  . statement 
  0:   On statement to state 150
  1:   On selection_statement to state 56
  2:   On assignment_statement to state 57
  3:   On iterative_statement to state 58
  4:   On return_statement to state 88
  5:   On function_call_statement to state 59
  6:   On function_call_assignment_statement to state 60
  7:   On '{' to state 61
  8:   On IF to state 62
  9:   On variable to state 63
  10:   On WHILE to state 64
  11:   On DO to state 65
  12:   On RETURN to state 55
  13:   On function_call to state 66
  14:   On NAME to state 67


State 149:
45: iterative_statement -> DO statement WHILE '(' boolean_expression ')'  . ';' 
  0:   On ';' to state 151


State 150:
43: selection_statement -> IF '(' boolean_expression ')' statement ELSE statement  . 
  Reduce by 43: selection_statement -> IF '(' boolean_expression ')' statement ELSE statement  . 


State 151:
45: iterative_statement -> DO statement WHILE '(' boolean_expression ')' ';'  . 
  Reduce by 45: iterative_statement -> DO statement WHILE '(' boolean_expression ')' ';'  . 



